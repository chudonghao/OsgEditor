cmake_minimum_required(VERSION 3.10)
project(OsgEditor)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_LIST_DIR}/CMakeModules")
################################################################################
# OSG
find_package(OpenSceneGraph REQUIRED osg)
## osgQt
if (OPENSCENEGRAPH_VERSION VERSION_GREATER_EQUAL "3.6")
    find_package(OpenSceneGraph REQUIRED osg osgDB osgViewer osgUtil osgParticle osgText osgGA osgFX)
    find_package(osgQOpenGL)
    message(STATUS OSGQOPENGL_INCLUDE_DIRS:"${OSGQOPENGL_INCLUDE_DIRS}")
    message(STATUS OSGQOPENGL_LIBRARY:"${OSGQOPENGL_LIBRARY}")
    set(OPENSCENEGRAPH_INCLUDE_DIRS ${OPENSCENEGRAPH_INCLUDE_DIRS} ${OSGQOPENGL_INCLUDE_DIRS})
    set(OPENSCENEGRAPH_LIBRARIES ${OPENSCENEGRAPH_LIBRARIES} ${OSGQOPENGL_LIBRARY})
#    find_packageOSGQOPENGL_LIBRARY
#    pkg_check_modules(OSGQT REQUIRED openscenegraph-osgQt)
#    set(OSGQT_LIBRARIES osgQOpenGL)
#    message(STATUS OSGQT_LIBRARIES:${OSGQT_LIBRARIES})
#    message(STATUS OSGQT_LIBRARY_DIRS:${OSGQT_LIBRARY_DIRS})
#    message(STATUS OSGQT_INCLUDE_DIRS:${OSGQT_INCLUDE_DIRS})
#    set(OPENSCENEGRAPH_INCLUDE_DIR ${OPENSCENEGRAPH_INCLUDE_DIR} ${OSGQT_INCLUDE_DIRS})
#    set(OPENSCENEGRAPH_LIBRARIES ${OPENSCENEGRAPH_LIBRARIES} ${OSGQT_LIBRARIES})
#    set(OPENSCENEGRAPH_LIBRARY_DIRS ${OPENSCENEGRAPH_LIBRARY_DIRS} ${OSGQT_LIBRARY_DIRS})
else ()
    find_package(OpenSceneGraph REQUIRED osg osgQt osgDB osgViewer osgUtil osgParticle osgText osgGA osgFX)
endif ()

message(STATUS "OPENSCENEGRAPH_INCLUDE_DIRS:${OPENSCENEGRAPH_INCLUDE_DIRS}")
message(STATUS "OPENSCENEGRAPH_LIBRARIES:${OPENSCENEGRAPH_LIBRARIES}")
message(STATUS "OPENSCENEGRAPH_VERSION:${OPENSCENEGRAPH_VERSION}")
message(STATUS "OPENSCENEGRAPH_LIBRARY_DIRS:${OPENSCENEGRAPH_LIBRARY_DIRS}")

include_directories(${OPENSCENEGRAPH_INCLUDE_DIR})

################################################################################
# Qt5
# Ubuntu package: qtbase5-dev qtdeclarative5-dev qtquickcontrols2-5-dev
find_package(Qt5 REQUIRED COMPONENTS Core Widgets OpenGL)
message(STATUS "Qt5Widgets_INCLUDE_DIRS:${Qt5Widgets_INCLUDE_DIRS}")
message(STATUS "Qt5OpenGL_INCLUDE_DIRS:${Qt5OpenGL_INCLUDE_DIRS}")
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTORCC ON)
set(QT_ALL_LIBRARIES Qt5::Core Qt5::Widgets Qt5::OpenGL)

################################################################################
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_DEBUG_POSTFIX "d")

add_subdirectory(third)

add_subdirectory(src)
